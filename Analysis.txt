В программе заявок использовал TimeUnit.SECONDS.sleep(), чтобы успеть включить утилиты для анализа памяти виртуальной машины.

Использовал jstat с ключом -gc затем pid. Видно полный и исполыуемый размерр survivor1, survivor2, eden space, old generation.
Кол-во minorGC и FullGC. Время GC, Кол-во потоков GC.

jmap -histo:live <pid> видно кол-во загруженных, живых обьектов, имя класса от которого они были созданы и размер который они занимают.

jconsole здесь можно видеть графики соотношения времени и памяти heap, кол-ва загруженных классов, использование процессора, кол-ва потоков.
GC переодически делает сборку и после этого видно как кол-во исползуемой памяти в heap уменьшается.
Кол-во потоков стабильное, кол-во классов сильно растет вначале, далее не значительно,
процессор работает переодически наверное в зависимости от загрузки классов, создания обьектов и сборки мусора.

